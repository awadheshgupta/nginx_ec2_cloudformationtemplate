---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates EC2 instance in AWS, Starts Nginx server on that EC2 with “Hello world” html'

Parameters:

  VPC:
    Description: VPC ID for EC2 Instance
    Type: AWS::EC2::VPC::Id
    
  Subnet:
    Description: Subnet for the EC2 Instance
    Type: AWS::EC2::Subnet::Id

  ImageId:
    Description: Image ID for the AMI used from AWS marketplace or customised AMI
    Type: AWS::EC2::Image::Id
    

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
              /var/www/index.html:
                content: !Sub |
                   <html><head><title>AutomationHero</title></head><body><h1>Hello Automation Hero<h1></body></html>
              /etc/nginx/nginx.conf:
                content: !Sub |
                  user nginx;
                  worker_processes auto;
                  error_log /var/log/nginx/error.log;
                  pid /var/run/nginx.pid;
                  events {
                      worker_connections 1024;
                  }
                  http {
                      access_log    /var/log/nginx/access.log  combined;
                      include       /etc/nginx/mime.types;
                      default_type  application/octet-stream;
                      server {
                        listen 80;
                        root /var/www;
                        index index.html;
                      }
                  }
          commands:
            set_permissions:
              command: chown -R nginx:nginx /var/www
            enable_nginx:
              command: systemctl enable nginx
            start_nginx:
              command: systemctl start nginx
    Properties:
      InstanceType: t2.nano
      ImageId: !Ref ImageId
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'True'
          DeleteOnTermination: 'True'
          SubnetId: !Ref Subnet
          DeviceIndex: '0'
          GroupSet: [!GetAtt InstanceSecurityGroup.GroupId]
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash -xe
            yum update -y
            yum install -y aws-cfn-bootstrap
            amazon-linux-extras install nginx1.12 -y
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: HelloWorldServices

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup  
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance
      - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance
      - PublicIp